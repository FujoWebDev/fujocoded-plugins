---
import { getPdsAgent, getDid } from "@fujocoded/authproto/helpers";

const FUJOCODED_HANDLE = "fujocoded.bsky.social";
const FUJOCODED_DID = await getDid({didOrHandle: FUJOCODED_HANDLE});
if (!FUJOCODED_DID) {
  throw new Error("Something has gone horribly wrong with this demo.");
}

const loggedInUser = Astro.locals.loggedInUser;

// To grab all the statuses that the user has posted, we first create
// an Agent to do those request on the users' behalf. Then we ask it to list
// the records in their "xyz.statuscity.status" data collection.
const agent = await getPdsAgent(loggedInUser ? {loggedInUser} : {didOrHandle: FUJOCODED_HANDLE});
const response = await agent?.com.atproto.repo.listRecords({
  repo: loggedInUser ? loggedInUser.did : FUJOCODED_DID, // Whose data do we want to fetch?
  collection: "xyz.statuscity.status", // What type of data do we want?
});

// We take the list of statuses out of the response. If
// there's no status, we use an empty array instead.
const statuses = response?.data.records ?? [];
---

<h2>{loggedInUser ? "Your" : `${FUJOCODED_HANDLE}'s`} Statusphere Status(es)</h2>
{statuses.length == 0 && <p>No statuses yet!</p>}

{
  statuses.map(({ uri, value }) => (
    <article>
      <!-- TODO: Put this in a way where it's clear what this is -->
      <a href={`https://pdsls.dev/${uri}`}><pre>{uri}</pre></a>
      <p>{value.status}</p>
      <time datetime={value.createdAt as string}>
        {new Date(value.createdAt as string).toDateString()}
      </time>
    </article>
  ))
}

